// <auto-generated />
using System;
using GCSERP.Produtos.Dados.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GCSERP.MVC.Migrations
{
    [DbContext(typeof(DbContextProdutos))]
    [Migration("20210628015500_SegundaAlteracao")]
    partial class SegundaAlteracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GCSERP.Produtos.Entidades.Classes.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apagado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoExterno")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRemocao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(2500)");

                    b.Property<string>("Historico")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Marca")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("ProdutoClassificacaoId")
                        .HasColumnType("int");

                    b.Property<byte>("UnidadeMedidaClassificacao")
                        .HasColumnType("tinyint");

                    b.Property<byte>("VersaoInterna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.HasIndex("ProdutoClassificacaoId");

                    b.ToTable("CadProdutos");
                });

            modelBuilder.Entity("GCSERP.Produtos.Entidades.Classes.ProdutoClassificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apagado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CodigoExterno")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRemocao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Historico")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("VersaoInterna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("Id");

                    b.ToTable("CadProdutosClassificacoes");
                });

            modelBuilder.Entity("GCSERP.Produtos.Entidades.Classes.Produto", b =>
                {
                    b.HasOne("GCSERP.Produtos.Entidades.Classes.ProdutoClassificacao", "Clasificacao")
                        .WithMany("Produtos")
                        .HasForeignKey("ProdutoClassificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GCS.ERP.Core.VO.GCSERPNCM", "NCM", b1 =>
                        {
                            b1.Property<int>("ProdutoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("varchar(8)")
                                .HasColumnName("UnidadeMedidaEstoque");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("CadProdutos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("GCS.ERP.Core.VO.GCSUnidadesMedidasGrandeza", "UnidadeMedidaEstoque", b1 =>
                        {
                            b1.Property<int>("ProdutoId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<short>("Valor")
                                .HasColumnType("smallint")
                                .HasColumnName("NCM");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("CadProdutos");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Clasificacao");

                    b.Navigation("NCM");

                    b.Navigation("UnidadeMedidaEstoque");
                });

            modelBuilder.Entity("GCSERP.Produtos.Entidades.Classes.ProdutoClassificacao", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
